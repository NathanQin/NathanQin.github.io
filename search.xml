<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Action&amp;Goto</title>
      <link href="2020/11/16/Action&amp;Goto/"/>
      <url>2020/11/16/Action&amp;Goto/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>关于Action表的求法和Goto表的求法，以及对利用Action表和Goto表进行语法分析。这是一种自底向上的方法。</p><p>首先明确两个概念：</p><p>推导：通过文法，从非终结符，推到终结符，即从左到右的过程。</p><p>规约：通过文法。从终结符到非终结符的过程，即从右到左的过程。</p><p>一、求Action表</p><p>略</p><p>二、求Goto表</p><p>略</p><p>三、语法分析</p><p>首先从例题入手</p><p>例1：已知的语法如下，需要进行语法分析id*id+id是否匹配。</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/16/Action&Goto/%E5%9B%BE1%EF%BC%9A%E8%AF%AD%E6%B3%95.png" alt="图1：语法"></p><p>所对应的Action表和Goto表如下：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/16/Action&Goto/%E5%9B%BE2%EF%BC%9AAction%E5%92%8CGoto-1605528950532.png" alt="图2：Action和Goto"></p><p>匹配过程如下：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/16/Action&Goto/%E5%9B%BE3%EF%BC%9A%E6%A3%80%E9%AA%8C%E6%98%AF%E5%90%A6%E5%8C%B9%E9%85%8D.png" alt="图3：检验是否匹配"></p><p>分析推导过程：</p><p>初始状态为0，符号栈为空，输入的表达式id*id+id$总共是6个字符，必须要加上这个美元符号</p><p>1、输入为id，对应的状态栈栈顶为0，由于id是终止符，所以寻找action表中，id的0状态时对应action是S<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.45110799999999995em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，根据之前的定义，表示移入到符号栈并且状态栈压入5状态。</p><p>2、输入为*，对应的状态栈栈顶为5，寻找action表中对应的action为r6，表示利用标为6的表达式进行规约，即F-&gt;id进行规约，id只是一个符号，所以符号栈弹出一个id，状态栈弹出一个5，再将F压入符号栈中，此时状态栈顶是0，goto表中对应的状态是3，所以压入状态栈值3。</p><p>以此类推。</p><p>然后我们可以利用算法来实现匹配的功能。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">此程序识别的为LR(0)语法分析器</span></span><br><span class="line"><span class="comment">文法为：</span></span><br><span class="line"><span class="comment">(1) E-&gt;E+T</span></span><br><span class="line"><span class="comment">(2) E-&gt;T</span></span><br><span class="line"><span class="comment">(3) T-&gt;T*F</span></span><br><span class="line"><span class="comment">(4) T-&gt;F</span></span><br><span class="line"><span class="comment">(5) F-&gt;(E)</span></span><br><span class="line"><span class="comment">(6) F-&gt;id    F-&gt;x </span></span><br><span class="line"><span class="comment">识别的输入语句为：id*id+id </span></span><br><span class="line"><span class="comment">由于id不是字符，改为x </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STACK_INIT_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STACKINCREMENT 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> X 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Y1 6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Y2 3</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> *base;</span><br><span class="line"><span class="keyword">int</span> *top;</span><br><span class="line"><span class="keyword">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> key;</span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line">&#125;Array;</span><br><span class="line"><span class="keyword">typedef</span> Array Action[X][Y1];<span class="comment">//action表 </span></span><br><span class="line"><span class="keyword">typedef</span> Array Goto[X][Y2]; <span class="comment">//goto表 </span></span><br><span class="line">SqStack *StateStack, *SignStack; <span class="comment">//状态栈 和符号栈 </span></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> a[]=&#123;<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;#&#x27;</span>&#125;; <span class="comment">/*id*id+id x表示id */</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gotofind</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">char</span>,Goto)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitActionAndGoto</span><span class="params">(Action A,Goto G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*更改action表,书上图4-37,说明：规定移入用&lt;10的数字，将规约定在&gt;=10的数字，0表示acc*/</span></span><br><span class="line">A[<span class="number">0</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">0</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">0</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">0</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">0</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">0</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">0</span>][<span class="number">0</span>].data=<span class="number">5</span>;A[<span class="number">0</span>][<span class="number">1</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">3</span>].data=<span class="number">4</span>;A[<span class="number">0</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">1</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">1</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">1</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">1</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">1</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">1</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">1</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">1</span>].data=<span class="number">5</span>;A[<span class="number">0</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">5</span>].data=<span class="number">0</span>;</span><br><span class="line">A[<span class="number">2</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">2</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">2</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">2</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">2</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">2</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">2</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">2</span>][<span class="number">1</span>].data=<span class="number">20</span>;A[<span class="number">2</span>][<span class="number">2</span>].data=<span class="number">7</span>;A[<span class="number">2</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">2</span>][<span class="number">4</span>].data=<span class="number">20</span>;A[<span class="number">2</span>][<span class="number">5</span>].data=<span class="number">20</span>;</span><br><span class="line">A[<span class="number">3</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">3</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">3</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">3</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">3</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">3</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">3</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">2</span>][<span class="number">1</span>].data=<span class="number">40</span>;A[<span class="number">2</span>][<span class="number">2</span>].data=<span class="number">40</span>;A[<span class="number">3</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">3</span>][<span class="number">4</span>].data=<span class="number">40</span>;A[<span class="number">3</span>][<span class="number">5</span>].data=<span class="number">40</span>;</span><br><span class="line"> A[<span class="number">4</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">4</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">4</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">4</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">4</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">4</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">4</span>][<span class="number">0</span>].data=<span class="number">5</span>;A[<span class="number">4</span>][<span class="number">1</span>].data=<span class="number">-1</span>;A[<span class="number">4</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">4</span>][<span class="number">3</span>].data=<span class="number">4</span>;A[<span class="number">4</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">4</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">5</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">5</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">5</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">5</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">5</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">5</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">5</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">5</span>][<span class="number">1</span>].data=<span class="number">60</span>;A[<span class="number">5</span>][<span class="number">2</span>].data=<span class="number">60</span>;A[<span class="number">5</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">5</span>][<span class="number">4</span>].data=<span class="number">60</span>;A[<span class="number">5</span>][<span class="number">5</span>].data=<span class="number">60</span>;</span><br><span class="line">A[<span class="number">6</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">6</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">6</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">6</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">6</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">6</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">6</span>][<span class="number">0</span>].data=<span class="number">5</span>;A[<span class="number">6</span>][<span class="number">1</span>].data=<span class="number">-1</span>;A[<span class="number">6</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">6</span>][<span class="number">3</span>].data=<span class="number">4</span>;A[<span class="number">6</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">6</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">7</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">7</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">7</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">7</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">7</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">7</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">7</span>][<span class="number">0</span>].data=<span class="number">5</span>;A[<span class="number">7</span>][<span class="number">1</span>].data=<span class="number">-1</span>;A[<span class="number">7</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">7</span>][<span class="number">3</span>].data=<span class="number">4</span>;A[<span class="number">7</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">7</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">8</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">8</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">8</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">8</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">8</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">8</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">8</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">8</span>][<span class="number">1</span>].data=<span class="number">6</span>;A[<span class="number">8</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">8</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">8</span>][<span class="number">4</span>].data=<span class="number">11</span>;A[<span class="number">8</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">9</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">9</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">9</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">9</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">9</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">9</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">9</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">9</span>][<span class="number">1</span>].data=<span class="number">10</span>;A[<span class="number">9</span>][<span class="number">2</span>].data=<span class="number">7</span>;A[<span class="number">9</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">9</span>][<span class="number">4</span>].data=<span class="number">10</span>;A[<span class="number">9</span>][<span class="number">5</span>].data=<span class="number">10</span>;</span><br><span class="line">A[<span class="number">10</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">10</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">10</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">10</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">10</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">10</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">10</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">10</span>][<span class="number">1</span>].data=<span class="number">30</span>;A[<span class="number">10</span>][<span class="number">2</span>].data=<span class="number">30</span>;A[<span class="number">10</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">10</span>][<span class="number">4</span>].data=<span class="number">30</span>;A[<span class="number">10</span>][<span class="number">5</span>].data=<span class="number">30</span>;</span><br><span class="line">A[<span class="number">11</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">11</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">11</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">11</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">11</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">11</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">11</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">11</span>][<span class="number">1</span>].data=<span class="number">50</span>;A[<span class="number">11</span>][<span class="number">2</span>].data=<span class="number">50</span>;A[<span class="number">11</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">11</span>][<span class="number">4</span>].data=<span class="number">50</span>;A[<span class="number">11</span>][<span class="number">5</span>].data=<span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*GOTO表*/</span></span><br><span class="line">G[<span class="number">0</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">0</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">0</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">0</span>][<span class="number">0</span>].data=<span class="number">1</span>;G[<span class="number">0</span>][<span class="number">1</span>].data=<span class="number">2</span>;G[<span class="number">0</span>][<span class="number">2</span>].data=<span class="number">3</span>;</span><br><span class="line">G[<span class="number">1</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">1</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">1</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">1</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">1</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">1</span>][<span class="number">2</span>].key=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">2</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">2</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">2</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">2</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">2</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">2</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">3</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">3</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">3</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">3</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">3</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">3</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">4</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">4</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">4</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">4</span>][<span class="number">0</span>].data=<span class="number">8</span>;G[<span class="number">4</span>][<span class="number">1</span>].data=<span class="number">2</span>;G[<span class="number">4</span>][<span class="number">2</span>].data=<span class="number">3</span>;</span><br><span class="line">G[<span class="number">5</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">5</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">5</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">5</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">5</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">5</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">6</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">6</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">6</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">6</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">6</span>][<span class="number">1</span>].data=<span class="number">9</span>;G[<span class="number">6</span>][<span class="number">2</span>].data=<span class="number">3</span>;</span><br><span class="line">G[<span class="number">7</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">7</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">7</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">7</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">7</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">7</span>][<span class="number">2</span>].data=<span class="number">10</span>;</span><br><span class="line">G[<span class="number">8</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">8</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">8</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">8</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">8</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">8</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">9</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">9</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">9</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">9</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">9</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">9</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">10</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">10</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">10</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">10</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">10</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">10</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">11</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">11</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">11</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">11</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">11</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">11</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InitStack</span><span class="params">(SqStack *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">s-&gt;base=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>(STACK_INIT_SIZE * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="keyword">if</span>(!s-&gt;base)</span><br><span class="line"><span class="keyword">return</span> ERROR;</span><br><span class="line">s-&gt;top=s-&gt;base;</span><br><span class="line">s-&gt;stacksize=STACK_INIT_SIZE;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Push</span><span class="params">(SqStack *s ,T e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>((s-&gt;top-s-&gt;base)&gt;=s-&gt;stacksize)</span><br><span class="line">&#123;</span><br><span class="line">s-&gt;base=(<span class="keyword">int</span> *) <span class="built_in">realloc</span> (s-&gt;base,(s-&gt;stacksize+STACKINCREMENT)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="keyword">if</span>(!s-&gt;base) <span class="keyword">return</span> ERROR;</span><br><span class="line">s-&gt;top=s-&gt;base+s-&gt;stacksize;</span><br><span class="line">s-&gt;stacksize+=STACKINCREMENT;</span><br><span class="line">&#125;</span><br><span class="line">*s-&gt;top++=e;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pop</span><span class="params">(SqStack *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> e;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top==s-&gt;base) <span class="keyword">return</span> ERROR;</span><br><span class="line">e=*--s-&gt;top;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gettop</span><span class="params">(SqStack *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> e;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top!=s-&gt;base)</span><br><span class="line">e=*(s-&gt;top<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Movein</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">char</span> h,Action A,Goto G,SqStack *StateStack,SqStack *SignStack)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;Y1;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(A[x][j].key==h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(A[x][j].data&lt;<span class="number">10</span> &amp;&amp; A[x][j].data&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Push(StateStack,A[x][j].data);</span><br><span class="line">Push(SignStack,h);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;不能识别，出错！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data&gt;=<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(A[x][j].data==<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line">&#125;</span><br><span class="line">                    Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;E&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;E&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line"></span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;E&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;E&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;T&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;T&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">40</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;T&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;T&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line">&#125; </span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;F&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;F&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;识别成功!^-^\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">k++;</span><br><span class="line">Movein(Gettop(StateStack),a[k],A,G,StateStack,SignStack);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gotofind</span><span class="params">(<span class="keyword">int</span> m,<span class="keyword">char</span> c,Goto G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,dkey;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;Y2;n++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(G[m][n].key==c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(G[m][n].data&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dkey=G[m][n].data;</span><br><span class="line"><span class="keyword">return</span> dkey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;识别出错！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SqStack *StateStack,*SignStack;</span><br><span class="line">Action A;</span><br><span class="line">Goto G;</span><br><span class="line">InitActionAndGoto(A,G);</span><br><span class="line">    StateStack=(SqStack *) <span class="built_in">malloc</span> (<span class="keyword">sizeof</span>(SqStack));</span><br><span class="line">SignStack=(SqStack *) <span class="built_in">malloc</span> (<span class="keyword">sizeof</span>(SqStack));</span><br><span class="line">InitStack(StateStack);</span><br><span class="line">    InitStack(SignStack);</span><br><span class="line">Push(StateStack,<span class="number">0</span>);</span><br><span class="line">Push(SignStack,<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">Movein(Gettop(StateStack),a[k],A,G,StateStack,SignStack);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后运行匹配成功。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> Action </tag>
            
            <tag> Goto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>First集和Follow集</title>
      <link href="2020/11/01/First%E9%9B%86%E5%92%8CFollow%E9%9B%86/"/>
      <url>2020/11/01/First%E9%9B%86%E5%92%8CFollow%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>First集求法：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/01/First%E9%9B%86%E5%92%8CFollow%E9%9B%86/first%E9%9B%86%E6%B1%82%E6%B3%95.png" alt="first集求法"></p><p>Follow集求法：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/01/First%E9%9B%86%E5%92%8CFollow%E9%9B%86/follow%E9%9B%86%E6%B1%82%E6%B3%95.png" alt="follow集求法"></p><p>例题详见：</p><p><a href="https://dulaogou.vip/2020/10/20/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86-10-20/#more">https://dulaogou.vip/2020/10/20/编译原理-10-20/#more</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> First集 </tag>
            
            <tag> Follw集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown模板</title>
      <link href="2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/"/>
      <url>2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>title【必需】文章標題<br>date【必需】文章創建日期<br>updated【可選】文章更新日期<br>tags：</p><ul><li>JAVA</li><li>Android<br>【可選】文章標籤<br>categories【可選】文章分類<br>keywords【可選】文章關鍵字<br>description【可選】文章描述<br>top_img【可選】文章頂部圖片<br>cover【可選】文章縮略圖 (如果沒有設置 top_img, 文章頁頂部將顯示縮略圖，可設為 false / 圖片地址 / 留空)<br>comments【可選】顯示文章評論模塊 (默認 true)<br>toc【可選】顯示文章 TOC (默認為設置中 toc 的 enable 配置)<br>toc_number【可選】顯示 toc_number (默認為設置中 toc 的 number 配置)<br>auto_open【可選】是否自動打開 TOC (默認為設置中 toc 的 auto_open 配置)<br>toc_number、toc 和 auto_open，並配置 true 或者 false 即可<br>copyright【可選】顯示文章版權模塊 (默認為設置中 post_copyright 的 enable 配置)<br>copyright_author【可選】文章版權模塊的文章作者<br>copyright_author_href【可選】文章版權模塊的文章作者鏈接<br>copyright_url【可選】文章版權模塊的文章連結鏈接<br>copyright_info【可選】文章版權模塊的版權聲明文字<br>copyright_author: xxxx<br>copyright_author_href: <a href="https://xxxxxx.com">https://xxxxxx.com</a><br>copyright_url: <a href="https://xxxxxx.com">https://xxxxxx.com</a><br>copyright_info: 此文章版權歸xxxxx所有，如有轉載，請註明來自原作者</li></ul><p>mathjax【可選】顯示 mathjax (當設置 mathjax 的 per_page: false 時，才需要配置，默認 false)<br>katex【可選】顯示 katex (當設置 katex 的 per_page: false 時，才需要配置，默認 false)<br>aplayer【可選】在需要的頁面加載 aplayer 的 js 和 css, 請參考文章下面的音樂 配置<br>highlight_shrink【可選】配置代碼框是否展開 (true/false)(默認為設置中 highlight_shrink 的配置)<br>abberlink：<br>標籤外掛（Tag Plugins）</p><div class="note [class] [no-icon]"><p>Any content (support inline tags <a href="http://too.io">too.io</a>).</p></div><pre><code>[class]   : default | primary | success | info | warning |   danger.[no-icon] : Disable icon in note.</code></pre><p>例：</p><div class="note default"><p>default 提示塊標籤</p></div><div class="note primary no-icon"><p>primary 提示塊標籤</p></div><div class="note success"><p>success 提示塊標籤</p></div><div class="note info"><p>info 提示塊標籤</p></div><div class="note warning"><p>warning 提示塊標籤</p></div><div class="note danger"><p>danger 提示塊標籤</p></div><p>如果你想把一些文字、內容隱藏起來，並提供按鈕讓用户點擊顯示。可以使用這個標籤外掛。</p><p>Inline</p><p>inline 在文本里面添加按鈕隱藏內容，只限文字</p><p>( content 不能包含英文逗號，可用 ‚)</p><span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">display  </button><span class="hide-content">content</span></span><p>content: 文本內容</p><p>display: 按鈕顯示的文字 (可選)</p><p>bg: 按鈕的背景顏色 (可選)</p><p>color: 按鈕文字的顏色 (可選)</p><p>例：</p><p>哪個英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因為西裝褲(C裝酷)</span></span></p><p>門裏站着一個人? <span class="hide-inline"><button type="button" class="hide-button button--animated" style>Click  </button><span class="hide-content">閃</span></span></p><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116195021024.png" alt="image-20201116195021024"></p><p>Block</p><p>block 獨立的 block 隱藏內容，可以隱藏很多內容，包括圖片，代碼塊等等</p><p>( display 不能包含英文逗號，可用 ‚)</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">display    </button><span class="hide-content"><p>content</p></span></div><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116195004698.png" alt="image-20201116195004698"></p><p>Toggle</p><p>如果你需要展示的內容太多，可以把它隱藏在收縮框裏，需要時再把它展開。</p><p>( display 不能包含英文逗號，可用 ‚)</p><div class="hide-toggle" style="border: 1px solid bg"><div class="hide-button toggle-title" style="background-color: bg;color: color"><i class="fas fa-caret-right fa-fw"></i><span>display</span></div>    <div class="hide-content"><p>content</p></div></div><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116194956622.png" alt="image-20201116194956622"></p><p>mermaid 標籤可以繪製 Flowchart（流程圖）、Sequence diagram（時序圖 ）、Class Diagram（類別圖）、State Diagram（狀態圖）、Gantt（甘特圖）和 Pie Chart（圓形圖），具體可以查看 mermaid 文檔</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116194942064.png" alt="image-20201116194942064"></p><p>Button</p><a class="btn-beautify button--animated [color] [style] [layout] [position] [size]" href="/%5Burl%5D" title="[text]"><i class="[icon] fa-fw"></i><span>[text]</span></a><p>[url]     : 鏈接</p><p>[text]    : 按鈕文字</p><p>[icon]    : [可選] 圖標</p><p>[color]    : [可選] 按鈕背景顔色(默認style時）</p><p>​           按鈕字體和邊框顔色(outline時)</p><p>​           default/blue/pink/red/purple/orange/green</p><p>[style]    : [可選] 按鈕樣式 默認實心</p><p>​           outline/留空</p><p>[layout]   : [可選] 按鈕佈局 默認為line</p><p>​           block/留空</p><p>[position]  : [可選] 按鈕位置 前提是設置了layout為block 默認為左邊</p><p>​           center/right/留空</p><p>[size]    : [可選] 按鈕大小</p><p>​           larger/留空</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116195302005.png" alt="image-20201116195302005"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex的一些基本用法</title>
      <link href="2020/10/09/latex%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
      <url>2020/10/09/latex%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>详见：<a href="https://www.jianshu.com/p/3f7f984d0d66">https://www.jianshu.com/p/3f7f984d0d66</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自我介绍</title>
      <link href="2020/10/01/%E6%88%91%E7%9A%84%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
      <url>2020/10/01/%E6%88%91%E7%9A%84%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>首先，这是我</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/01/%E6%88%91%E7%9A%84%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/%E5%A4%B4%E5%83%8F.jpg" alt></p><p>生于2000年，一个无用的老咸鱼，写博客纯属消磨时间。</p><p>国内某双一流高校软件工程学生。梦想赚大钱。</p><p>联系方式已经在主页贴出，不在赘述。</p><p>其他的，没了，欢迎我的博客。嘻嘻！</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/07/01/hello-world/"/>
      <url>2020/07/01/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
