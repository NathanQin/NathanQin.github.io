<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>正则表达式&amp;NFA&amp;DFA&amp;化简</title>
      <link href="2020/11/17/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F&amp;NFA&amp;DFA&amp;%E5%8C%96%E7%AE%80/"/>
      <url>2020/11/17/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F&amp;NFA&amp;DFA&amp;%E5%8C%96%E7%AE%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>友情链接：</p><p><a href="https://dulaogou.vip/2020/09/18/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86-9-17/">https://dulaogou.vip/2020/09/18/编译原理-9-17/</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 正则表达式 </tag>
            
            <tag> NFA </tag>
            
            <tag> DFA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Action&amp;Goto</title>
      <link href="2020/11/16/Action&amp;Goto/"/>
      <url>2020/11/16/Action&amp;Goto/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>关于Action表的求法和Goto表的求法，以及对利用Action表和Goto表进行语法分析。这是一种自底向上的方法。</p><p>首先明确两个概念：</p><p>推导：通过文法，从非终结符，推到终结符，即从左到右的过程。</p><p>规约：通过文法。从终结符到非终结符的过程，即从右到左的过程。</p><p>一、求Action表</p><p>略</p><p>二、求Goto表</p><p>略</p><p>三、语法分析</p><p>首先从例题入手</p><p>例1：已知的语法如下，需要进行语法分析id*id+id是否匹配。</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/16/Action&Goto/%E5%9B%BE1%EF%BC%9A%E8%AF%AD%E6%B3%95.png" alt="图1：语法"></p><p>所对应的Action表和Goto表如下：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/16/Action&Goto/%E5%9B%BE2%EF%BC%9AAction%E5%92%8CGoto-1605528950532.png" alt="图2：Action和Goto"></p><p>匹配过程如下：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/16/Action&Goto/%E5%9B%BE3%EF%BC%9A%E6%A3%80%E9%AA%8C%E6%98%AF%E5%90%A6%E5%8C%B9%E9%85%8D.png" alt="图3：检验是否匹配"></p><p>分析推导过程：</p><p>初始状态为0，符号栈为空，输入的表达式id*id+id$总共是6个字符，必须要加上这个美元符号</p><p>1、输入为id，对应的状态栈栈顶为0，由于id是终止符，所以寻找action表中，id的0状态时对应action是S<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.45110799999999995em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，根据之前的定义，表示移入到符号栈并且状态栈压入5状态。</p><p>2、输入为*，对应的状态栈栈顶为5，寻找action表中对应的action为r6，表示利用标为6的表达式进行规约，即F-&gt;id进行规约，id只是一个符号，所以符号栈弹出一个id，状态栈弹出一个5，再将F压入符号栈中，此时状态栈顶是0，goto表中对应的状态是3，所以压入状态栈值3。</p><p>以此类推。</p><p>然后我们可以利用算法来实现匹配的功能。</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">此程序识别的为LR(0)语法分析器</span></span><br><span class="line"><span class="comment">文法为：</span></span><br><span class="line"><span class="comment">(1) E-&gt;E+T</span></span><br><span class="line"><span class="comment">(2) E-&gt;T</span></span><br><span class="line"><span class="comment">(3) T-&gt;T*F</span></span><br><span class="line"><span class="comment">(4) T-&gt;F</span></span><br><span class="line"><span class="comment">(5) F-&gt;(E)</span></span><br><span class="line"><span class="comment">(6) F-&gt;id    F-&gt;x </span></span><br><span class="line"><span class="comment">识别的输入语句为：id*id+id </span></span><br><span class="line"><span class="comment">由于id不是字符，改为x </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STACK_INIT_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STACKINCREMENT 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> X 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Y1 6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Y2 3</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> *base;</span><br><span class="line"><span class="keyword">int</span> *top;</span><br><span class="line"><span class="keyword">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> key;</span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line">&#125;Array;</span><br><span class="line"><span class="keyword">typedef</span> Array Action[X][Y1];<span class="comment">//action表 </span></span><br><span class="line"><span class="keyword">typedef</span> Array Goto[X][Y2]; <span class="comment">//goto表 </span></span><br><span class="line">SqStack *StateStack, *SignStack; <span class="comment">//状态栈 和符号栈 </span></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> a[]=&#123;<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;#&#x27;</span>&#125;; <span class="comment">/*id*id+id x表示id */</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gotofind</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">char</span>,Goto)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitActionAndGoto</span><span class="params">(Action A,Goto G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*更改action表,书上图4-37,说明：规定移入用&lt;10的数字，将规约定在&gt;=10的数字，0表示acc*/</span></span><br><span class="line">A[<span class="number">0</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">0</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">0</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">0</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">0</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">0</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">0</span>][<span class="number">0</span>].data=<span class="number">5</span>;A[<span class="number">0</span>][<span class="number">1</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">3</span>].data=<span class="number">4</span>;A[<span class="number">0</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">1</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">1</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">1</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">1</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">1</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">1</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">1</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">1</span>].data=<span class="number">5</span>;A[<span class="number">0</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">0</span>][<span class="number">5</span>].data=<span class="number">0</span>;</span><br><span class="line">A[<span class="number">2</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">2</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">2</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">2</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">2</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">2</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">2</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">2</span>][<span class="number">1</span>].data=<span class="number">20</span>;A[<span class="number">2</span>][<span class="number">2</span>].data=<span class="number">7</span>;A[<span class="number">2</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">2</span>][<span class="number">4</span>].data=<span class="number">20</span>;A[<span class="number">2</span>][<span class="number">5</span>].data=<span class="number">20</span>;</span><br><span class="line">A[<span class="number">3</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">3</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">3</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">3</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">3</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">3</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">3</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">2</span>][<span class="number">1</span>].data=<span class="number">40</span>;A[<span class="number">2</span>][<span class="number">2</span>].data=<span class="number">40</span>;A[<span class="number">3</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">3</span>][<span class="number">4</span>].data=<span class="number">40</span>;A[<span class="number">3</span>][<span class="number">5</span>].data=<span class="number">40</span>;</span><br><span class="line"> A[<span class="number">4</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">4</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">4</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">4</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">4</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">4</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">4</span>][<span class="number">0</span>].data=<span class="number">5</span>;A[<span class="number">4</span>][<span class="number">1</span>].data=<span class="number">-1</span>;A[<span class="number">4</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">4</span>][<span class="number">3</span>].data=<span class="number">4</span>;A[<span class="number">4</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">4</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">5</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">5</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">5</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">5</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">5</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">5</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">5</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">5</span>][<span class="number">1</span>].data=<span class="number">60</span>;A[<span class="number">5</span>][<span class="number">2</span>].data=<span class="number">60</span>;A[<span class="number">5</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">5</span>][<span class="number">4</span>].data=<span class="number">60</span>;A[<span class="number">5</span>][<span class="number">5</span>].data=<span class="number">60</span>;</span><br><span class="line">A[<span class="number">6</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">6</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">6</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">6</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">6</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">6</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">6</span>][<span class="number">0</span>].data=<span class="number">5</span>;A[<span class="number">6</span>][<span class="number">1</span>].data=<span class="number">-1</span>;A[<span class="number">6</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">6</span>][<span class="number">3</span>].data=<span class="number">4</span>;A[<span class="number">6</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">6</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">7</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">7</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">7</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">7</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">7</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">7</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">7</span>][<span class="number">0</span>].data=<span class="number">5</span>;A[<span class="number">7</span>][<span class="number">1</span>].data=<span class="number">-1</span>;A[<span class="number">7</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">7</span>][<span class="number">3</span>].data=<span class="number">4</span>;A[<span class="number">7</span>][<span class="number">4</span>].data=<span class="number">-1</span>;A[<span class="number">7</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">8</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">8</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">8</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">8</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">8</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">8</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">8</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">8</span>][<span class="number">1</span>].data=<span class="number">6</span>;A[<span class="number">8</span>][<span class="number">2</span>].data=<span class="number">-1</span>;A[<span class="number">8</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">8</span>][<span class="number">4</span>].data=<span class="number">11</span>;A[<span class="number">8</span>][<span class="number">5</span>].data=<span class="number">-1</span>;</span><br><span class="line">A[<span class="number">9</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">9</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">9</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">9</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">9</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">9</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">9</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">9</span>][<span class="number">1</span>].data=<span class="number">10</span>;A[<span class="number">9</span>][<span class="number">2</span>].data=<span class="number">7</span>;A[<span class="number">9</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">9</span>][<span class="number">4</span>].data=<span class="number">10</span>;A[<span class="number">9</span>][<span class="number">5</span>].data=<span class="number">10</span>;</span><br><span class="line">A[<span class="number">10</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">10</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">10</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">10</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">10</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">10</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">10</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">10</span>][<span class="number">1</span>].data=<span class="number">30</span>;A[<span class="number">10</span>][<span class="number">2</span>].data=<span class="number">30</span>;A[<span class="number">10</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">10</span>][<span class="number">4</span>].data=<span class="number">30</span>;A[<span class="number">10</span>][<span class="number">5</span>].data=<span class="number">30</span>;</span><br><span class="line">A[<span class="number">11</span>][<span class="number">0</span>].key=<span class="string">&#x27;x&#x27;</span>;A[<span class="number">11</span>][<span class="number">1</span>].key=<span class="string">&#x27;+&#x27;</span>;A[<span class="number">11</span>][<span class="number">2</span>].key=<span class="string">&#x27;*&#x27;</span>;A[<span class="number">11</span>][<span class="number">3</span>].key=<span class="string">&#x27;(&#x27;</span>;A[<span class="number">11</span>][<span class="number">4</span>].key=<span class="string">&#x27;)&#x27;</span>;A[<span class="number">11</span>][<span class="number">5</span>].key=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">A[<span class="number">11</span>][<span class="number">0</span>].data=<span class="number">-1</span>;A[<span class="number">11</span>][<span class="number">1</span>].data=<span class="number">50</span>;A[<span class="number">11</span>][<span class="number">2</span>].data=<span class="number">50</span>;A[<span class="number">11</span>][<span class="number">3</span>].data=<span class="number">-1</span>;A[<span class="number">11</span>][<span class="number">4</span>].data=<span class="number">50</span>;A[<span class="number">11</span>][<span class="number">5</span>].data=<span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*GOTO表*/</span></span><br><span class="line">G[<span class="number">0</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">0</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">0</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">0</span>][<span class="number">0</span>].data=<span class="number">1</span>;G[<span class="number">0</span>][<span class="number">1</span>].data=<span class="number">2</span>;G[<span class="number">0</span>][<span class="number">2</span>].data=<span class="number">3</span>;</span><br><span class="line">G[<span class="number">1</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">1</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">1</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">1</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">1</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">1</span>][<span class="number">2</span>].key=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">2</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">2</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">2</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">2</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">2</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">2</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">3</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">3</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">3</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">3</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">3</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">3</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">4</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">4</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">4</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">4</span>][<span class="number">0</span>].data=<span class="number">8</span>;G[<span class="number">4</span>][<span class="number">1</span>].data=<span class="number">2</span>;G[<span class="number">4</span>][<span class="number">2</span>].data=<span class="number">3</span>;</span><br><span class="line">G[<span class="number">5</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">5</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">5</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">5</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">5</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">5</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">6</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">6</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">6</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">6</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">6</span>][<span class="number">1</span>].data=<span class="number">9</span>;G[<span class="number">6</span>][<span class="number">2</span>].data=<span class="number">3</span>;</span><br><span class="line">G[<span class="number">7</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">7</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">7</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">7</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">7</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">7</span>][<span class="number">2</span>].data=<span class="number">10</span>;</span><br><span class="line">G[<span class="number">8</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">8</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">8</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">8</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">8</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">8</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">9</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">9</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">9</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">9</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">9</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">9</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">10</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">10</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">10</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">10</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">10</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">10</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">G[<span class="number">11</span>][<span class="number">0</span>].key=<span class="string">&#x27;E&#x27;</span>;G[<span class="number">11</span>][<span class="number">1</span>].key=<span class="string">&#x27;T&#x27;</span>;G[<span class="number">11</span>][<span class="number">2</span>].key=<span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">G[<span class="number">11</span>][<span class="number">0</span>].data=<span class="number">-1</span>;G[<span class="number">11</span>][<span class="number">1</span>].data=<span class="number">-1</span>;G[<span class="number">11</span>][<span class="number">2</span>].data=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InitStack</span><span class="params">(SqStack *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">s-&gt;base=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>(STACK_INIT_SIZE * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="keyword">if</span>(!s-&gt;base)</span><br><span class="line"><span class="keyword">return</span> ERROR;</span><br><span class="line">s-&gt;top=s-&gt;base;</span><br><span class="line">s-&gt;stacksize=STACK_INIT_SIZE;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Push</span><span class="params">(SqStack *s ,T e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>((s-&gt;top-s-&gt;base)&gt;=s-&gt;stacksize)</span><br><span class="line">&#123;</span><br><span class="line">s-&gt;base=(<span class="keyword">int</span> *) <span class="built_in">realloc</span> (s-&gt;base,(s-&gt;stacksize+STACKINCREMENT)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="keyword">if</span>(!s-&gt;base) <span class="keyword">return</span> ERROR;</span><br><span class="line">s-&gt;top=s-&gt;base+s-&gt;stacksize;</span><br><span class="line">s-&gt;stacksize+=STACKINCREMENT;</span><br><span class="line">&#125;</span><br><span class="line">*s-&gt;top++=e;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pop</span><span class="params">(SqStack *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> e;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top==s-&gt;base) <span class="keyword">return</span> ERROR;</span><br><span class="line">e=*--s-&gt;top;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gettop</span><span class="params">(SqStack *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> e;</span><br><span class="line"><span class="keyword">if</span>(s-&gt;top!=s-&gt;base)</span><br><span class="line">e=*(s-&gt;top<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Movein</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">char</span> h,Action A,Goto G,SqStack *StateStack,SqStack *SignStack)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;Y1;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(A[x][j].key==h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(A[x][j].data&lt;<span class="number">10</span> &amp;&amp; A[x][j].data&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Push(StateStack,A[x][j].data);</span><br><span class="line">Push(SignStack,h);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;不能识别，出错！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data&gt;=<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(A[x][j].data==<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line">&#125;</span><br><span class="line">                    Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;E&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;E&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line"></span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;E&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;E&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;T&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;T&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">40</span>)</span><br><span class="line">&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;T&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;T&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(A[x][j].data==<span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line">&#125; </span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;F&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Pop(SignStack);</span><br><span class="line">Pop(StateStack);</span><br><span class="line">Push(StateStack,Gotofind(Gettop(StateStack),<span class="string">&#x27;F&#x27;</span>,G));</span><br><span class="line">Push(SignStack,<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;识别成功!^-^\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">k++;</span><br><span class="line">Movein(Gettop(StateStack),a[k],A,G,StateStack,SignStack);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gotofind</span><span class="params">(<span class="keyword">int</span> m,<span class="keyword">char</span> c,Goto G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,dkey;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;Y2;n++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(G[m][n].key==c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(G[m][n].data&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dkey=G[m][n].data;</span><br><span class="line"><span class="keyword">return</span> dkey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;识别出错！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SqStack *StateStack,*SignStack;</span><br><span class="line">Action A;</span><br><span class="line">Goto G;</span><br><span class="line">InitActionAndGoto(A,G);</span><br><span class="line">    StateStack=(SqStack *) <span class="built_in">malloc</span> (<span class="keyword">sizeof</span>(SqStack));</span><br><span class="line">SignStack=(SqStack *) <span class="built_in">malloc</span> (<span class="keyword">sizeof</span>(SqStack));</span><br><span class="line">InitStack(StateStack);</span><br><span class="line">    InitStack(SignStack);</span><br><span class="line">Push(StateStack,<span class="number">0</span>);</span><br><span class="line">Push(SignStack,<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">Movein(Gettop(StateStack),a[k],A,G,StateStack,SignStack);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后运行匹配成功。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> Action </tag>
            
            <tag> Goto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>First集和Follow集</title>
      <link href="2020/11/01/First%E9%9B%86%E5%92%8CFollow%E9%9B%86/"/>
      <url>2020/11/01/First%E9%9B%86%E5%92%8CFollow%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>First集求法：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/01/First%E9%9B%86%E5%92%8CFollow%E9%9B%86/first%E9%9B%86%E6%B1%82%E6%B3%95.png" alt="first集求法"></p><p>Follow集求法：</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/11/01/First%E9%9B%86%E5%92%8CFollow%E9%9B%86/follow%E9%9B%86%E6%B1%82%E6%B3%95.png" alt="follow集求法"></p><p>例题详见：</p><p><a href="https://dulaogou.vip/2020/10/20/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86-10-20/#more">https://dulaogou.vip/2020/10/20/编译原理-10-20/#more</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> First集 </tag>
            
            <tag> Follw集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>120个小项目</title>
      <link href="2020/10/21/little%20step/"/>
      <url>2020/10/21/little%20step/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><em>文本操作</em></p><ul><li>逆转字符串——输入一个字符串，将其逆转并输出。</li><li>拉丁猪文字游戏——这是一个英语语言游戏。基本规则是将一个英语单词的第一个辅音音素的字母移动到词尾并且加上后缀-ay（譬如“banana”会变成“anana-bay”）。可以在维基百科上了解更多内容。</li><li>统计元音字母——输入一个字符串，统计处其中元音字母的数量。更复杂点的话统计出每个元音字母的数量。</li><li>判断是否为回文——判断用户输入的字符串是否为回文。回文是指正反拼写形式都是一样的词，譬如“racecar”。</li><li>统计字符串中的单词数目——统计字符串中单词的数目，更复杂的话从一个文本中读出字符串并生成单词数目统计结果。</li><li>文本编辑器——记事本类型的应用，可以打开、编辑、保存文本文档。可以增加单词高亮和其它的一些特性。</li><li>RSS源创建器——可以从其它来源读取文本并将其以RSS或者Atom的格式发布出去。</li><li>实时股价——可以查询股票当前价格。用户可以设定数据刷新频率，程序会用绿色和红色的箭头表示股价走势。</li><li>访客留言簿/日志——允许人们添加评论或者日记，可以设置开启/关闭评论，并且可以记录下每一条目的时间。也可以做成喊话器。</li><li>新闻和比分播报器——一个桌面应用，可以从网上收集新闻和比赛分数，将结果在屏幕上滚动播出。</li><li>占星罗盘——用占星术来预测每天的运程。</li><li>密码短信——可以将数据加密解密，并能将其发送给朋友。</li><li>帮你挑礼物——输入一堆你可能会送的礼物，当有人过生日时，该程序会随机选择一样礼物。也可以加上一个额外功能，可以告知哪里可以弄到这个礼物。</li><li>HTML生成器——将 TEXT 文档转换成HTML文件，对制作网页HTML文档很有用。</li><li>CD-Key生成器——利用某种算法生成一个唯一的key。软件开发者可以用它来作为软件的激活器。</li><li>正则表达式查询工具——用户可以输入一段文本，在另外的控件里输入一个正则表达式。运行以后会返回匹配的内容或者正则表达式中的错误。</li></ul><p><em>网络</em></p><ul><li>FTP工具——与远程网络服务器交互文件。</li><li>原子钟校时——从网上同步原子钟时间。全世界有很多原子钟，可以把它们都列出来。</li><li>聊天应用（IRC或者MSN风格的）——像IRC那样的聊天室软件或者MSN那样的实时聊天软件。更复杂一点的话，可以为聊天制定一套你自己的传输协议。</li><li>获取当前天气——获取某个地区当前的天气情况。</li><li>P2P文件共享应用——像LimeWire、FrostWire、Bearshare或者torrent风格的应用。</li><li>端口扫描器——输入某个ip地址和端口区间，程序会逐个尝试区间内的端口，如果能成功连接的话就将该端口标记为open。</li><li>邮件检查工具（POP3/IMAP）——用户输入一些账号信息，包括服务器、ip、协议类型（POP3或者IMAP），应用每隔一段时间就会检查下该账号下的邮箱。</li><li>数据包嗅探器——侦测电脑上进出的数据包，获取诸如目的地和大小之类的信息。</li><li>IP注册地查询——输入ip地址，查询该ip是在哪注册的。</li><li>Whois查询工具——输入一个ip或者主机地址，通过whois查询并将结果返回。</li><li>邮编查询——输入邮编，返回使用该邮编的地区名称。</li><li>远程登入——远程登入桌面类型的应用，可以查看和控制远程电脑（假如你已经获得权限）。可能需要你自己的网络和两台电脑来进行测试。</li><li>网站定时检查器——每隔一段时间或者在预定的时间尝试连接某个网站或者服务器，来检查它是否可以连上，如果连不上了会通过邮件或者桌面通知来告知你。</li><li>小型网页服务器——简易版的网页服务器，可以存放包含Javascript和其它形式代码的HTML文件。复杂一点的话可以尝试流媒体视频、创建一种服务器端语言或者其它类型的流媒体。</li><li>网络蜘蛛——一个可以自动执行网页上各种任务的程序，任务包括网站检查、页面抓取、数据摘要以及网络邮务。</li></ul><p><em>类</em></p><ul><li>产品库存管理——创建一个管理产品库存的应用。建立一个产品类，包含价格、id、库存数量。然后建立一个库存类，记录各种产品并能计算库存的总价值。</li><li>电影商店——管理录像带租借，记录借出时间、到期时间、逾期费用。复杂一点可以生成逾期用户的账号报告。</li><li>航空/酒店预订系统——创建一套预订航班或酒店的预订系统。不同的航班座位和酒店房间收费不一样。譬如头等舱要比经济舱贵。带阁楼的套间要更贵些。记录下何时有空房可供预订。</li><li>学生成绩管理器——记录一个班级的学生（创建一个Student类，记录他们的名字、平均分和考试分数）和他们的成绩等级。根据学生的测验和作业的分数计算出平均分和成绩等级。复杂一点可以将数据画在贝尔曲线上。</li><li>银行账户管家——创建一个名为“Account”的抽象类，有三个为“CheckingAccount”、“SavingsAccount”和“BusinessAccount”的子类。通过类似ATM的程序来管理这些账户的借贷。</li><li>馆藏目录——创建一个图书类，记录书名、页数、国际标准书号、是否借出。用它来管理各种书籍，允许用户进行借出和归还操作。复杂一点的话，可以生成逾期图书和逾期费用的报告。也可以让用户进行预约操作。</li></ul><p><em>线程处理</em></p><ul><li>下载进度条——创建一个表示下载进度的进度条。进度条由独立的线程操作，通过委托来和主线程进行通讯。</li><li>下载管理器——允许程序同时下载数个文件，每个都用单独的线程进行背景下载。主线程会关注下载进度并且在下载完成时通知用户。</li><li>聊天软件（远程聊天）——做一个聊天软件，允许你通过ip直接连接到另一台电脑，也允许你的“服务器”程序处理多个请求连接。</li><li>批量缩略图生成器——在进行图片转换的处理时会需要很多时间，尤其是图片很大时。做一个图片处理程序，能让你在做其它事的时候在后台线程里将数百张图片转换成某个大小的图片。复杂一点的话可以用一个线程来缩放，用另一个线程来为缩略图重命名。</li></ul><p><em>Web**应用</em></p><ul><li>所见即所得编辑器——创建一个在线编辑器，允许用户移动元素、创建表格、书写文本、设置颜色，而用户不必懂HTML。就像Dreamweaver或者FrontPage。如果需要例子的话，可以参看DIC。</li><li>分页浏览器——创建一个可以分页的小型网页浏览器，可以同时浏览几个网页。简化一点的话不要考虑Javascript或者其它客户端代码。</li><li>文件下载器——该程序可以从网页上下载各种资源，包括视频和其它文件。用于有很多下载链接的网页。</li><li>远程登录——创建一个远程登录的应用，可以通过网络登录服务器并能执行一些基本命令。</li><li>在线白板——做一个在线白板程序，你和朋友们可以一起在白板上进行一些操作，画图、写字等等。</li><li>带宽监视器——这个小工具可以记录你已经在网上上传和下载多少数据流量了。可以试着做份报告或者图表来展示各时段的使用情况。</li><li>书签搜集管理器——该程序可以让用户上传书签并将它们排序，去掉重复的，并能生成书签文件以供Firefox/IE/Safari等使用。复杂一点的话可以试着将书签整理进不同的文件夹。</li><li>密码保险箱——用来记录各种密码，并且将它们加密，这样别人就看不到了。</li><li>iGoogle媒体播放器小部件——做一个iGoogle小部件，可以用来播放本地音乐列表，也可以每天分享一首歌。也许还可以让别人看到你最近听了些什么歌。</li><li>基于文本的游戏——做一个像Utopia那样的文本RPG，游戏中，你可以创建一个文明、收集资源、共铸联盟、施放法术、回合制系统。看看是否能够统一王国。</li><li>定时自动登录——做一个程序可以在预定的时间登录进某个指定的网页并且执行特定的动作，然后在登出。可以用来检查邮箱、发布常规内容、为其它程序获取信息。</li><li>电子卡片生成器——可以让用户制作自己的电子卡片并发送给其他人。可以使用flash也可以不用。可以使用图片库，也可以加上深刻的格言警句。</li><li>内容管理系统——像Joomala、Drupal、PHP     Nuke这样的内容管理系统。从简单的做起，慢慢增加其它功能。</li><li>模板制作器——该网站应用允许用户输入各种颜色代码、元素、尺寸，来为PHPBB、Invision Board、MySpace之类的应用创建模板文件。</li><li>验证码生成器——应该在登录时见过有数字有字母的验证码图片吧？这可以防止自动登录和垃圾广告。试着自己做一个，如果使用PHP的话，看下GD的图片函数。</li></ul><p><em>文件</em></p><ul><li>试卷生成器——该程序可以从文件中随机挑选出不同的题目生成一份试卷。每份试卷可以不一样，通过读取答案来给打分。</li><li>快速启动——该工具可以添加各个程序的小图标，点击小图标就可以运行程序。和Windows的快速启动类似。</li><li>文件管理器——做一个文件管理器，要加些新特性，更佳的搜索功能、新图标、新外观。</li><li>文件记录排序工具——从文件中读取记录，将其排序并写回文件中。允许用户选择排序风格以及排序关键字。</li><li>生成财务交易文件并且算出平均值——将财务交易读进文件，按照账户分类、算出各项目的总量或平均值、理清各账户的借贷数据。</li><li>Zip文件生成器——用户输入不同文件夹的文件，也许还包括其他电脑中的文件，然后程序将这些文件打包成zip文件。复杂一点的话，打包时对这些文件进行压缩。</li><li>PDF生成器——从txt、html或其它文件中读取数据生成PDF文件。可以做成一个网页服务，用户上传文件，返回一个pdf版本。</li><li>批量文件命名器——程序批量处理一些文件，将根据用户提供的过滤器为它们重命名。譬如用户输入的过滤器为myimage###.jpg，那么会生成至少包含3位数的文件名，譬如myimage001.jpg、myimage145.jpg，甚至是myimage1987.jpg，因为1987也满足了至少包含3位数的条件。</li><li>MP3标签生成器——修改MP3文件的id3v1标签。还可以试着在MP3文件的头部加入id3v2的标签，譬如album art标签。</li><li>日志文件生成器——该程序可以记录指定事件的日志。譬如程序做了什么、系统在干什么、文件什么时候被修改了。</li><li>Excel分页输出器——做一个在线程序，可以读取文件内容生成一个excel分页。可以通过CVS或者其它文件格式来做。复杂一点的话看看是否能创建公式字段。</li><li>RPG角色属性生成器——做一个程序来给RPG角色随机分配属性点数，可以由用户制定一些分配规则。可以生成职业、性别、力量/魔法/敏捷点数、额外能力或者贸易技能。把结果保存成文件，这样跑团的时候地下城主可以把它打印出来。</li><li>文件复制工具——该工具可以批量处理文件复制和备份操作。</li></ul><p><em>数据库</em></p><ul><li>SQL查询分析器——该工具可以让用户输入一条查询命令，让其运行于本地数据库中。尽量让它运行得更高效。</li><li>远程SQL工具——该工具能让你通过网络在远程服务器上执行查询操作。它能接收远程主机地址、验证用户名和密码、执行查询并返回结果。</li><li>卡片整理器——创建一个在线应用，用来记录搜集到的卡片。可以让用户输入整套卡片，查看哪些已经有了，哪些还需要搜集。要增加复杂度的话，还可以让用户知道还差多少可以完成，或者已经收集卡片的价值。</li><li>报告生成器——该工具可以根据数据库中的表格生成一份报告。譬如根据订单表格生成销售报告。</li><li>数据库备份脚本制作器——该程序可以读取数据库的对象、关系、记录和步骤，生成一个sql文件，该文件可以导入另一个数据库或者作为备份文件。</li><li>备忘录——该程序可以让用户设置一个日期和某个事件的时间、事件备注并将它们放到日历上。用户可以查看日历、搜索特定的事件。复杂一点的话，可以让用户设置重复发生的事件，譬如每天、每周、每月、每年等等。</li><li>预算记录器——该程序可以记录家庭预算。用户可以添加支出、收入，计算一段时间内的收入和支出。复杂一点的话，让用户指定一个时间段，显示该时间段内的家庭收支情况。</li><li>电话簿——记录各种联系人和他们的号码、邮箱、备注。复杂一点的话可以让用户连上网将电话簿发布到设置好的网站上。</li><li>电视节目记录器——你是否有不想错过的电视节目？但没有录像机或者想之后能找到该电视节目然后录下来，那么可以做个程序寻找各种在线电视导航网站，记录下电视节目名称、播放时间、播放频道，存在数据库中。数据库或者网站到时就会发邮件提醒你，节目就快在某个频道开始了。</li><li>旅行计划系统——该系统可以让用户管理旅行路线，记录下航班和酒店安排、感兴趣的地方、预算和时间表。</li><li>实体关系图生成器——该程序可以让用户整合实体关系图，并将其保存起来，也可以用它来生成一些基础SQL语句。</li><li>数据库翻译器（MySQL&lt;-&gt;SQL     Server）——该工具可以从数据库A读取数据，生成数据库B使用的SQL语句，将数据存入数据库B。比较常用的是SQL Server和Oracle使用的MySQL服务器。</li><li>BBS论坛——为你和小伙伴们做一个论坛，可以发帖、管理、分享想法和构思。</li></ul><p><em>图像和多媒体</em></p><ul><li>幻灯片——做一个以幻灯片形式显示各种图片的程序。为了增加难度可以做些额外的效果，譬如渐进检出、星型擦除、窗口渐隐。</li><li>思维导图——允许用户记录下各种构思并且快速地进行头脑风暴将这些构思整合到一张思维导图中。越快越好，因此要让用户能迅速地写下构思，然后将其拖到可视的导图中去，将构思之间的关系展现出来。</li><li>导入图片并存成灰度图——该工具将图片上的彩色除尽并保存。可以增加对比度调整、色化等额外功能以增加复杂度。</li><li>在线流媒体视频——试着自己做一个在线流媒体视频播放器。</li><li>MP3播放器（以及其他格式的音乐播放器）——该小程序用来播放你最爱的音乐文件。复杂一点的话看看能否加个播放列表功能和均衡器。</li><li>批量图片处理——该程序可以将一个文件夹内的图片进行统一的处理，譬如降低图片色调、转换格式或者修改文件属性。还可以尝试给图片增加标签。</li><li>CD烧录器——可以轻松烧录CD的工具。</li><li>YouTube下载器——可以从<a href="https://link.zhihu.com/?target=http%3A//Youtube.com">http://Youtube.com</a>上下载视频到硬盘中，要支持包括FLV和AVI在内的文件格式。</li><li>墙纸管理工具——做一个管理墙纸的程序，可以定时更换刷新墙纸，也可以针对分辨率进行缩放。</li><li>截屏程序——做一个可以截屏的工具，复杂一点可以增加一个转发邮件的功能。</li><li>图片浏览器——该程序可以查看电脑上各种格式的图片，譬如PNG、GIF、JPG、BMP、TIFF等等。</li><li>交通信号灯——试着做一个交通信号灯并且把它放到可以互动的场景中。不要让汽车闯红灯或者撞到其它车。</li><li>MP3-WAV转换器——MP3格式本质上就是压缩版的WAV。试着将MP3转换成WAV格式以供可以处理WAV格式的程序使用。请记住1MB的MP3大约等于10MB的WAV。</li><li>签名生成器——是否在网上见过有人的留言后面有条生成的签名？试着做个程序让用户可以指定背景、文字、颜色和对齐方式来定制一个签名档。</li><li>屏保——电脑空闲时会运行的屏保程序。简单版的可以使用一些标准图片，复杂版的可以做出能在屏幕上转来转去的3D物体。</li><li>水印——你是否想保护你图片的版权？在图片上加上标志或者文字，这样别人就不能轻易地从你网站上盗图了。做一个程序来给你的图片加上水印吧。</li><li>海龟图——创建一个20*20的格子，用命令让一只海龟在格子上画线。可以前进、左转、右转，拿起或放下笔等等。复杂一点的话，允许程序从文件中读取命令列表。可以在网上了解到更多关于“海龟图”的信息。</li></ul><p><em>游戏</em></p><ul><li>战船——创建两块游戏面板，玩家各占一边，在上面放置一些战船，玩家看不到对方的面板。每艘船都占几个格子，玩家轮流攻击某个格子，如果格子上有船，那就命中目标，否则就是未命中。当一艘船所占的所有格子都被攻击命中了，那么船就被击沉。谁先将对方战船全部击沉就获胜。</li><li>象棋跳棋——象棋或者跳棋游戏。可以试着做成可以联网玩，用图形用户界面来实现悔棋、保存走棋过程并且可以回放。</li><li>刽子手——从文件中随机选择一个单词，让玩家猜单词中的字母。旁边是一幅隐藏的行绞刑的画，猜错一个单词，画就显示出一部分。画全部显示出来时还没能猜全的话玩家就输了。</li><li>填字游戏——创建一个填字游戏，并为每个词提供一个提示信息，让玩家填上所有正确的单词。</li><li>青蛙跳——让青蛙跳过河或者马路，过河的话要跳在顺流而下速度各异的木头或者睡莲叶子上，过马路的话要避开速度各异的车子。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 文本操作 </tag>
            
            <tag> 网络 </tag>
            
            <tag> 类 </tag>
            
            <tag> 线程处理 </tag>
            
            <tag> web应用 </tag>
            
            <tag> 文件 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 图像和多媒体 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown模板</title>
      <link href="2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/"/>
      <url>2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>title【必需】文章標題<br>date【必需】文章創建日期<br>updated【可選】文章更新日期<br>tags：</p><ul><li><p>JAVA</p></li><li><p>Android<br>【可選】文章標籤<br>categories【可選】文章分類<br>keywords【可選】文章關鍵字<br>description【可選】文章描述<br>top_img【可選】文章頂部圖片<br>cover【可選】文章縮略圖 (如果沒有設置 top_img, 文章頁頂部將顯示縮略圖，可設為 false / 圖片地址 / 留空)<br>comments【可選】顯示文章評論模塊 (默認 true)<br>toc【可選】顯示文章 TOC (默認為設置中 toc 的 enable 配置)<br>toc_number【可選】顯示 toc_number (默認為設置中 toc 的 number 配置)<br>auto_open【可選】是否自動打開 TOC (默認為設置中 toc 的 auto_open 配置)<br>toc_number、toc 和 auto_open，並配置 true 或者 false 即可<br>copyright【可選】顯示文章版權模塊 (默認為設置中 post_copyright 的 enable 配置)<br>copyright_author【可選】文章版權模塊的文章作者<br>copyright_author_href【可選】文章版權模塊的文章作者鏈接<br>copyright_url【可選】文章版權模塊的文章連結鏈接<br>copyright_info【可選】文章版權模塊的版權聲明文字<br>copyright_author: xxxx<br>copyright_author_href: <a href="https://xxxxxx.com">https://xxxxxx.com</a><br>copyright_url: <a href="https://xxxxxx.com">https://xxxxxx.com</a><br>copyright_info: 此文章版權歸xxxxx所有，如有轉載，請註明來自原作者</p></li></ul><p>mathjax【可選】顯示 mathjax (當設置 mathjax 的 per_page: false 時，才需要配置，默認 false)<br>katex【可選】顯示 katex (當設置 katex 的 per_page: false 時，才需要配置，默認 false)<br>aplayer【可選】在需要的頁面加載 aplayer 的 js 和 css, 請參考文章下面的音樂 配置<br>highlight_shrink【可選】配置代碼框是否展開 (true/false)(默認為設置中 highlight_shrink 的配置)<br>abberlink：<br>標籤外掛（Tag Plugins）</p><div class="note [class] [no-icon]"><p>Any content (support inline tags <a href="http://too.io">too.io</a>).</p></div><pre><code>[class]   : default | primary | success | info | warning |   danger.[no-icon] : Disable icon in note.</code></pre><p>例：</p><div class="note default"><p>default 提示塊標籤</p></div><div class="note primary no-icon"><p>primary 提示塊標籤</p></div><div class="note success"><p>success 提示塊標籤</p></div><div class="note info"><p>info 提示塊標籤</p></div><div class="note warning"><p>warning 提示塊標籤</p></div><div class="note danger"><p>danger 提示塊標籤</p></div><p>如果你想把一些文字、內容隱藏起來，並提供按鈕讓用户點擊顯示。可以使用這個標籤外掛。</p><p>Inline</p><p>inline 在文本里面添加按鈕隱藏內容，只限文字</p><p>( content 不能包含英文逗號，可用 ‚)</p><span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">display  </button><span class="hide-content">content</span></span><p>content: 文本內容</p><p>display: 按鈕顯示的文字 (可選)</p><p>bg: 按鈕的背景顏色 (可選)</p><p>color: 按鈕文字的顏色 (可選)</p><p>例：</p><p>哪個英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因為西裝褲(C裝酷)</span></span></p><p>門裏站着一個人? <span class="hide-inline"><button type="button" class="hide-button button--animated" style>Click  </button><span class="hide-content">閃</span></span></p><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116195021024.png" alt="image-20201116195021024"></p><p>Block</p><p>block 獨立的 block 隱藏內容，可以隱藏很多內容，包括圖片，代碼塊等等</p><p>( display 不能包含英文逗號，可用 ‚)</p><div class="hide-block"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">display    </button><span class="hide-content"><p>content</p></span></div><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116195004698.png" alt="image-20201116195004698"></p><p>Toggle</p><p>如果你需要展示的內容太多，可以把它隱藏在收縮框裏，需要時再把它展開。</p><p>( display 不能包含英文逗號，可用 ‚)</p><div class="hide-toggle" style="border: 1px solid bg"><div class="hide-button toggle-title" style="background-color: bg;color: color"><i class="fas fa-caret-right fa-fw"></i><span>display</span></div>    <div class="hide-content"><p>content</p></div></div><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116194956622.png" alt="image-20201116194956622"></p><p>mermaid 標籤可以繪製 Flowchart（流程圖）、Sequence diagram（時序圖 ）、Class Diagram（類別圖）、State Diagram（狀態圖）、Gantt（甘特圖）和 Pie Chart（圓形圖），具體可以查看 mermaid 文檔</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116194942064.png" alt="image-20201116194942064"></p><p>Button</p><a class="btn-beautify button--animated [color] [style] [layout] [position] [size]" href="/%5Burl%5D" title="[text]"><i class="[icon] fa-fw"></i><span>[text]</span></a><p>[url]     : 鏈接</p><p>[text]    : 按鈕文字</p><p>[icon]    : [可選] 圖標</p><p>[color]    : [可選] 按鈕背景顔色(默認style時）</p><p>​           按鈕字體和邊框顔色(outline時)</p><p>​           default/blue/pink/red/purple/orange/green</p><p>[style]    : [可選] 按鈕樣式 默認實心</p><p>​           outline/留空</p><p>[layout]   : [可選] 按鈕佈局 默認為line</p><p>​           block/留空</p><p>[position]  : [可選] 按鈕位置 前提是設置了layout為block 默認為左邊</p><p>​           center/right/留空</p><p>[size]    : [可選] 按鈕大小</p><p>​           larger/留空</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/16/Markdown%E6%A8%A1%E6%9D%BF/image-20201116195302005.png" alt="image-20201116195302005"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决hexo部署时出现的Spawn failed问题</title>
      <link href="2020/10/16/%E8%A7%A3%E5%86%B3hexo%E9%83%A8%E7%BD%B2%E6%98%AF%E5%87%BA%E7%8E%B0%E7%9A%84Span%20failed%E9%97%AE%E9%A2%98/"/>
      <url>2020/10/16/%E8%A7%A3%E5%86%B3hexo%E9%83%A8%E7%BD%B2%E6%98%AF%E5%87%BA%E7%8E%B0%E7%9A%84Span%20failed%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>转载自：<a href="https://blog.csdn.net/htl2018/article/details/106876940">https://blog.csdn.net/htl2018/article/details/106876940</a></p><h1 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述：</h1><ul><li>先是出现错误：<br><code>error：spawn failed...</code></li><li>然后经过一些博客的操作会出现以下问题：<br><code>fatal: cannot lock ref 'HEAD': unable to resolve reference HEAD: Invalid argument error: src refspec</code></li><li>或者：<br><code>error: src refspec HEAD does not match any.</code>等等</li></ul><p><strong>总结一下</strong>：<br>问题大多是因为<code>git</code>进行<code>push</code>或者<code>hexo d</code>的时候改变了一些<code>.deploy_git</code>文件下的内容。</p><h1 id="解决办法"><a class="markdownIt-Anchor" href="#解决办法"></a> 解决办法：</h1><ol><li>删除<code>.deploy_git</code>文件夹;</li><li>输入<code>git config --global core.autocrlf false</code></li><li>然后，依次执行：<br><code>hexo clean</code><br><code>hexo g</code><br><code>hexo d</code></li></ol><p>问题解决。暴力直接，有效。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex的一些基本用法</title>
      <link href="2020/10/09/latex%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
      <url>2020/10/09/latex%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>详见：<a href="https://www.jianshu.com/p/3f7f984d0d66">https://www.jianshu.com/p/3f7f984d0d66</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自我介绍</title>
      <link href="2020/10/01/%E6%88%91%E7%9A%84%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
      <url>2020/10/01/%E6%88%91%E7%9A%84%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>首先，这是我</p><p><img src= "/img/loading.gif" data-lazy-src="/2020/10/01/%E6%88%91%E7%9A%84%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/%E5%A4%B4%E5%83%8F.png" alt="头像"></p><p>生于2000年，一个无用的老咸鱼，写博客纯属消磨时间。</p><p>国内某双一流高校软件工程学生。梦想赚大钱。</p><p>联系方式已经在主页贴出，不在赘述。</p><p>其他的，没了，欢迎我的博客。嘻嘻！</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/07/01/hello-world/"/>
      <url>2020/07/01/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
